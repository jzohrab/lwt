{% form_theme form 'form_table_layout.html.twig' %}

{{ form_start(form) }}

<table id="term">

  {#
    Using jquery to hide the lang. dropdown if it's set.
    I tried using various twig checks (defined, is null, etc)
  but kept getting exceptions.
    { { form_row(form.language, { 'tr#id': 'edit_user_name' }) } }
  #}
  <tr id="languageSel">
    <td>Language</td>
    <td>{{ form_widget(form.language) }}</td>
  </tr>

  {{ form_row(form.Text) }}
  {{ form_row(form.parent) }}
  {{ form_row(form.Romanization) }}
  {{ form_row(form.Translation) }}
  {{ form_row(form.Status) }}
  {{ form_row(form.Sentence) }}

  {% do form.termTags.setRendered %}
  {# manually write list so it can be managed by tagit. #}
  <tr>
    <td>Tags</td>
    <td>
      <ul id="termtagslist" class="tags nomarginblock">
        {% for termTag in form.termTags %}
        <li>
          {{ termTag.vars.value.text }}
        </li>
        {% endfor %}
      </ul>
    </td>
  </tr>

</table>

<button class="btn">{{ button_label|default('Save') }}</button>

<input name="posttoblank" type="hidden" value="{{ posttoblank ?? 'no' }}">

{{ form_end(form) }}

<script type="text/javascript">
  
  let set_parent_fields = function(event, ui) {
    $('#autocomplete_parent_text').val(ui.item.label);
    $('#autocomplete_parent_id').val(ui.item.value);
    if (parseInt(ui.item.value) == 0) {
      $('#gotoParentID').addClass('hide');
    }
    else {
      $('#gotoParentID').removeClass('hide');
    }
    return false;
  };
  
  let set_up_parent_autocomplete = function() {
    $("#autocomplete_parent_text").autocomplete({
      source: function(request, response) {
        $('#autocomplete_parent_id').val(0);
        $.ajax({
          url: 'inc/ajax_get_words_matching.php',
          type: 'POST',
          data: { word: request.term },
          dataType: 'json',
          success: function(data) {
            const arr = [];
            for (const [wordid, word] of Object.entries(data)) {
              const obj = { label: word, value: wordid };
              arr.push(obj);
            };
            response(arr, data);
          }
        })
      },
      select: set_parent_fields,
      focus: set_parent_fields,
      change: function(event,ui) {
        if (!ui.item) {
          $('#autocomplete_parent_id').val(0);
          $('#gotoParentID').addClass('hide');
        }
        else {
          $('#gotoParentID').removeClass('hide');
        }
      }
    });
  };

  let go_to_parent = function() {
    var pid = parseInt($('#autocomplete_parent_id').val());
    if (pid == 0) {
      return;
    }
    else {
      window.location = `edit_word.php?wid=${pid}`;
    }
  }

  let showHideLanguageSelector = function() {
    const langid = parseInt($('#term_language').val());
    if (langid > 0) {
      $('#languageSel').hide();
    }
  }
    
  let setupTagit = function() {
    var prototypeFieldName = 'term[termTags][__name__][text]';
    var fieldIndex = 0;
    
    let invalidChar = function(s) { return /[\uD800-\uDFFF]/.test(s); };

    $('#termtagslist').tagit(
      {
        beforeTagAdded: function (_event, ui) {
          if (invalidChar(ui.tag.text())) {
            return;
          }
          fieldIndex++;
          $(this).tagit({fieldName: prototypeFieldName.replace('__name__', fieldIndex)});
        },
        availableTags: TAGS,
        fieldName: 'term[termTags][0][text]'
      });

  };

  let handleAutofocus = function() {
    const wordfield = $('#wordfield');
    const transfield = $('#translationfield');

    if ($('#autofocus').val() != 'false') {
      if (wordfield.val()) {
        transfield.focus();
      }
      else {
        wordfield.focus();
      }
    }

  }
  $(document).ready(function () {
    showHideLanguageSelector()
    setupTagit();
    // TODO - activate this
    // handleAutofocus();
    set_up_parent_autocomplete();

    if ($('#autocomplete_parent_id').val() > 0) {
      $('#gotoParentID').removeClass('hide');
    }

  });

</script>
