{% form_theme form 'form_table_layout.html.twig' %}

{{ form_start(form) }}

{% do form.textTags.setRendered %}

{{ form_widget(form) }}

{#
form_table_layout.html.twig doesn't allow adding
custom rows within the generated table, so first write it
out and then move it into the generated table w/ javascript.

Added "styling margin-block-start/end" manually, because
otherwise the tags text input has a huge start/end, on
Chrome at least.  Not sure where that style is coming from.
#}
<table>
<tr id="tag_source">
  <td>Text tags</td>
  <td>
    <ul id="texttagslist" class="tags"
        style="margin-block-start: 0px; margin-block-end: 0px;"
    data-index="{{ form.textTags|length > 0 ? form.textTags|last.vars.name + 1 : 0 }}"
    data-prototype="{{ form_widget(form.textTags.vars.prototype)|e('html_attr') }}"
    >
{% for textTag in form.textTags %}
    <li>
        {{ textTag.vars.value.text }}
    </li>
{% endfor %}
</ul>
  </td>
</tr>
</table>


  <button class="btn">{{ button_label|default('Save') }}</button>
{{ form_end(form) }}

<script>

  $(document).ready(function () {

    var prototypeFieldName = 'text[textTags][__name__][text]';
    var fieldIndex = 0;
    
    let invalidChar = function(s) { return /[\uD800-\uDFFF]/.test(s); };

    let src = $("#tag_source");
    let tr = $(src).remove().clone();
    $("#text tbody").append(tr);

    $('#texttagslist').tagit(
      {
        beforeTagAdded: function (_event, ui) {
          if (invalidChar(ui.tag.text())) {
            return;
          }
          fieldIndex++;
          $(this).tagit({fieldName: prototypeFieldName.replace('__name__', fieldIndex)});
        },
        availableTags: TAGS,
        fieldName: 'TermTags[TagList][]'
      });

    });

    </script>
