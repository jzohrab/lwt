<script type="text/javascript" src="/js/jquery.js" charset="utf-8"></script>

<p>Updated: {{ term.ID }}</p>

<p>Updates:</p>
<p>{{ updates|json_encode() }}</p>

<p>Terms:</p>
<div>
  {% for item in textitems %}
  <hr />
  <p>{{ item.SpanID }}, {{ item.Text }} %}</p>
  <p>Hides:</p>
  <ul>
    {% for hidden in item.hides %}
    <li>{{ hidden.SpanID }} ({{ hidden.Text }})</li>
    {% endfor %}
  </ul>
  {% if item.hides|length > 0 %}
  <p>first element hidden: {{ item.hides|first.SpanID }}</p>
  {% endif %}
  {% endfor %}
</div>

<script>

  {# This feels bananas, but it works.  Generating javascript. #}
  let update_reading_pane_elements = function() {
    {% for item in textitems %}
      update_element(`{% include '/read/textitem.html.twig' %}`)
    {% endfor %}
  }
  
  let update_element = function(s) {
    console.log(s);
    var newel = $($.parseHTML(s));
    const newid = newel.attr('id');
    console.log(`got element id = ${newel.attr('id')}`);
    const length = parseInt(newel.attr('data_code'));

    // Changing things in the parent frame,
    // so have to search there.
    if (length == 1) {
      console.log(`replacing ${newid} with content.`);
      const repel = $(`#${newid}`, window.parent.document);
      if (repel.length == 0) {
        console.log(' ... couldnt find newid??');
      }
      else {
        repel.replaceWith(s);
      }
    }
    else {
      console.log(`multi-term element, trickier.`);
    }
  }

  top.frames.dictframe.location.href = '/read/empty';

  $(document).ready(function() {
    update_reading_pane_elements();
  });
</script>
